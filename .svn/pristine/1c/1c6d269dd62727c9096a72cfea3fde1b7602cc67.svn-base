<template>
  <div>
    <v-imgArea></v-imgArea>
    <!-- grid  @on-item-click=""  link=""  -->
    <grid :rows="4" v-for="(item, index) in subTabData">
      <grid-item v-for="subI in item">
        <div @click='go(subI)'>
          <i v-bind:class="'ionic '+subI.ionic"></i>
          <span class="tab_text" v-html="subI.text">{{ subI.text }}  </span>
        </div>
      </grid-item>
    </grid>
    <!-- 底部-->
    <v-footermenu></v-footermenu>
  </div>
</template>
<script>
import {
  Grid,
  GridItem
} from 'vux';
import {
  mapState,
  mapActions
} from 'vuex'
import vImgArea from './imgArea.vue';
import vFootermenu from './footerMenu.vue';
import server from '../../config/hostConfig'
export default {
  components: {
    Grid,
    GridItem,
    'v-footermenu': vFootermenu,
    'v-imgArea': vImgArea
  },
  data() {
    return {
      subTabData: [
        [{
          id: 1,
          text: '增值税小规模<br />一键零申报',
          ionic: 'sb',
          link: ''
        }, {
          id: 2,
          text: '缴纳税款',
          ionic: 'jnsk',
          link: '/wjkList'
        }, {
          id: 3,
          text: '预约办税',
          ionic: 'yybs',
          link: '#/irs/yybsHome'
        }, {
          id: 4,
          text: '税种启用',
          ionic: 'szqy',
          link: ''
        }, {
          id: 5,
          text: '增值税小规模本期申报',
          ionic: 'sb',
          link: '/xgmsb_step1'
        }, {
          id: 6,
          text: '增值税一般纳税人资格登记',
          ionic: 'yybs',
          link: '/nsrzgdj_step1'
        }]
      ]
    }
  },

  methods: {
    ...mapActions(['USER_SIGNOUT']),
    changeItem: function(index) {
      this.defaultMunu = index;
      console.log('333')
    },
    go(menu) {
      if (!(this.token)) {
        this.$toast("请登录后再操作！");
        this.$router.replace('/login');
        return;
      }
      if (this.accountInfo && !this.nsrInfo) {
        this.$alert('该业务只支持企业身份用户办理,如需办理请切换至企业身份！');
        return;
      }
      let openArr = [2, 3, 5, 6];
      if (openArr.indexOf(menu.id) === -1) {
        this.$alert('暂未开放，敬请期待！');
        return;
      } else {
        if (menu.id === 3) { //ionic项目链接地址
          window.location.href = server.current + server.proAddr + menu.link;
        } else {
          if (menu.id === 5) { //小规模申报时判断是否存在本期申报
            if (this.hdxxData) {
              let ysbArr = this.hdxxData.sbzlxx.map(function(item) {
                return item.SBZLCODE;
              })
              if (ysbArr.indexOf('10103') == -1) { //不存在小规模申报的当期申报
                this.$alert('您不存在增值税小规模本期申报，若要进行逾期申报，请到<span style="color:red">涉税查询-逾期申报查询</span>模块查看！');
                return;
              }
            } else {
              this.$alert('核定信息获取失败，请重新登录后再试');
              return;
            }
          }
          this.$router.push(menu.link);
        }
      }
    }
  },
  computed: {
    ...mapState({
      hdxxData: state => {
        return state.hdxx.hdxxData ? JSON.parse(state.hdxx.hdxxData) : null
      },
      token: state => state.user.token,
      nsrInfo: state => state.user.nsrInfo,
      accountInfo: state => state.user.accountInfo
    })
  },
  beforeRouteEnter(to, from, next) {
    next(vm => {
      if (to.path == '/index') { //每次进入首页时清空登录信息
        vm.USER_SIGNOUT();
      }

    });
  }

}
</script>
<style scoped="">
.tab_text {
  font-size: 13px;
}

.weui-grid {
  padding: 15px 0px 10px 0px;
  text-align: center;
}

.weui-grid span {
  line-height: 15px;
  display: block;
  height: 30px;
  padding-top: 6px;
  color: #666;
}

.sb {
  background: url(../../../static/index/ywbl/sb.png) 0 0 no-repeat;
}

.jnsk {
  background: url(../../../static/index/ywbl/jnsk.png) 0 0 no-repeat;
}

.yybs {
  background: url(../../../static/index/ywbl/yybs.png) 0 0 no-repeat;
}

.szqy {
  background: url(../../../static/index/ywbl/szqy.png) 0 0 no-repeat;
}

i.ionic {
  display: block;
  width: 30px;
  height: 30px;
  margin: 0 auto;
  background-size: 30px;
}
</style>
